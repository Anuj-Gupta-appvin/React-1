{"ast":null,"code":"var _jsxFileName = \"/home/appvin/Desktop/react/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Data from \"./Components/CaseChanger\";\nimport { Switch as MuiSwitch } from '@mui/material';\nimport { useState } from 'react';\nimport About from './Components/About';\nimport Bttn from '.';\nimport Alerts from './Components/AlertingMsg';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (type, message) => {\n    setAlert({\n      type: type,\n      message: message\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const getdata = data => {\n    console.log(data);\n  };\n  const [mode, setMode] = useState({\n    color: \"black\",\n    background: \"white\"\n  });\n  const [modetext, setModetext] = useState(\"Enable Dark Mode\");\n  const togglemode = () => {\n    if (mode.color === \"black\") {\n      setMode({\n        color: \"white\",\n        background: \"black\"\n      });\n      // document.title = \"TextUtils-DarkMode\"\n      showAlert(\"success\", \"Dark Mode Enable\");\n      setModetext(\"Enable Light Mode\");\n    } else {\n      setMode({\n        color: \"black\",\n        background: \"white\"\n      });\n      // document.title = \"TextUtils-LightMode\"\n      setModetext(\"Enable Dark Mode\");\n      showAlert(\"success\", \"Light Mode Enable\");\n    }\n  };\n  const label = {\n    inputProps: {\n      'aria-label': 'Switch demo'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen\",\n      style: mode,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right pr-4 pt-4\",\n        style: mode,\n        children: /*#__PURE__*/_jsxDEV(MuiSwitch, {\n          className: \"border-gray-400 border-2 rounded-3xl\",\n          onClick: togglemode,\n          ...label,\n          color: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Alerts, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Data, {\n            mode: mode,\n            modetext: modetext,\n            togglemode: togglemode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Bttn, {\n        getdata: getdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4/N664SxH0m6B4pwST7QuPNtzFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Data","Switch","MuiSwitch","useState","About","Bttn","Alerts","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","alert","setAlert","showAlert","type","message","setTimeout","getdata","data","console","log","mode","setMode","color","background","modetext","setModetext","togglemode","label","inputProps","children","className","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/appvin/Desktop/react/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Data from \"./Components/CaseChanger\"\nimport { Switch as MuiSwitch } from '@mui/material';\nimport { useState } from 'react';\nimport About from './Components/About'\nimport Bttn from '.'\nimport Alerts from './Components/AlertingMsg';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n  const showAlert = (type,message)=>{\n    setAlert({\n      type:type,\n      message:message\n    })\n    setTimeout(()=>{\n      setAlert(null)    \n    },1500)\n  }\n\n  const getdata = (data)=>{\n    console.log(data)\n  }\n  \n  const [mode, setMode] = useState({\n          color:\"black\",\n          background:\"white\"\n          \n      })\n      const [modetext, setModetext] = useState(\"Enable Dark Mode\")\n\n      const togglemode = ()=>{\n          if (mode.color === \"black\"){\n              setMode({color:\"white\",\n                  background:\"black\",\n                  \n                })\n                // document.title = \"TextUtils-DarkMode\"\n              showAlert(\"success\",\"Dark Mode Enable\")\n              setModetext((\"Enable Light Mode\"))\n          }\n          else{\n              setMode({color:\"black\",\n                  background:\"white\",})\n                  // document.title = \"TextUtils-LightMode\"\n              setModetext((\"Enable Dark Mode\"))\n              showAlert(\"success\",\"Light Mode Enable\")\n          }\n      }\n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\n  return (\n\n    <Router>\n    <div className='h-screen w-screen' style={mode}>\n      <div className='text-right pr-4 pt-4' style={mode}>\n      <MuiSwitch className='border-gray-400 border-2 rounded-3xl' onClick={togglemode} {...label}  color=\"default\"/>\n      </div>\n      <div className='mt-4'><Alerts alert={alert}/></div>\n      \n      {/* <Data mode={mode} modetext={modetext} togglemode={togglemode} showAlert={showAlert}/> */}\n      <Routes>\n    <Route path=\"/about\" element={<About />}>\n    </Route>\n    <Route path=\"/\" element={< Data mode={mode} modetext={modetext} togglemode={togglemode} showAlert={showAlert}/>}>\n    </Route>\n  </Routes>\n\n\n\n    <Bttn getdata={getdata} />\n\n\n    </div>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}