{"ast":null,"code":"var _jsxFileName = \"/home/appvin/Desktop/react/my-app/src/Components/CaseChanger.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CaseChanger() {\n  _s();\n  let mystyle = {\n    color: \"black\",\n    backgroundcolor: \"white\"\n  };\n  const [mode, setMode] = useState(mystyle);\n  const [text, setText] = useState(\"\");\n  let convertupper = () => {\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  let convertlower = () => {\n    let newtext = text.toLowerCase();\n    setText(newtext);\n  };\n  let textchange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-center w-screen h-screen\",\n      style: mystyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 h-4/5 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"text-area\",\n          id: \"text-area\",\n          className: \"border-2 border-gray-400 w-full h-full p-4\",\n          style: mystyle,\n          value: text,\n          onChange: textchange,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-2 bg-blue-600 text-white p-2 rounded-xl \",\n          style: mystyle,\n          onClick: convertupper,\n          children: \"Convert to UpperCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-2 bg-blue-600 text-white p-2 rounded-xl \",\n          style: mystyle,\n          onClick: convertlower,\n          children: \"Convert to LowerCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Words \", text.split(\" \").length, \" , Characters \", text.length, \" , WhiteSpaces \", (text.match(/\\s/g) || []).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(CaseChanger, \"k1/GBmYJlqQD7UyTUG+PI71iU1o=\");\n_c = CaseChanger;\nvar _c;\n$RefreshReg$(_c, \"CaseChanger\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CaseChanger","_s","mystyle","color","backgroundcolor","mode","setMode","text","setText","convertupper","newtext","toUpperCase","convertlower","toLowerCase","textchange","event","target","value","children","className","style","name","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","length","match","_c","$RefreshReg$"],"sources":["/home/appvin/Desktop/react/my-app/src/Components/CaseChanger.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function CaseChanger() {\n    let mystyle = {\n        color:\"black\",\n        backgroundcolor:\"white\"\n        \n    }\n    const [mode, setMode] = useState(mystyle)\n\n    const [text,setText] = useState(\"\")\n\n    let convertupper = ()=>{\n        let newtext = text.toUpperCase()\n        setText(newtext)\n    }\n    let convertlower = ()=>{\n        let newtext = text.toLowerCase()\n        setText(newtext)\n    }\n    let textchange = (event)=>{\n        setText(event.target.value)\n    }\n    \n  return (\n    <>\n    <div className='flex flex-col justify-center items-center w-screen h-screen' style={mystyle}>\n        <div className='w-4/5 h-4/5 pb-4'>\n        <textarea name=\"text-area\" id=\"text-area\" className='border-2 border-gray-400 w-full h-full p-4' style={mystyle} value={text} onChange={textchange}> </textarea>\n        </div>\n        <div>\n\n        <button className='border-2 bg-blue-600 text-white p-2 rounded-xl ' style={mystyle} onClick={convertupper}>Convert to UpperCase</button>\n        <button className='border-2 bg-blue-600 text-white p-2 rounded-xl ' style={mystyle} onClick={convertlower}>Convert to LowerCase</button>\n        </div>\n        <div className='pt-3'>\n            <div>\n            Words {text.split(\" \").length} , Characters {text.length} , WhiteSpaces {(text.match(/\\s/g) || []).length}\n            </div>\n        </div>\n    </div>\n        \n        \n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}