{"ast":null,"code":"var _jsxFileName = \"/home/appvin/Desktop/react/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Data from \"./Components/CaseChanger\";\nimport { Switch } from '@mui/material';\nimport { useState } from 'react';\nimport Alerts from './Components/AlertingMsg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = () => {};\n  const [mode, setMode] = useState({\n    color: \"black\",\n    background: \"white\"\n  });\n  const [modetext, setModetext] = useState(\"Enable Dark Mode\");\n  const togglemode = () => {\n    if (mode.color === \"black\") {\n      setMode({\n        color: \"white\",\n        background: \"black\"\n      });\n      setModetext(\"Enable Light Mode\");\n    } else {\n      setMode({\n        color: \"black\",\n        background: \"white\"\n      });\n      setModetext(\"Enable Dark Mode\");\n    }\n  };\n  const label = {\n    inputProps: {\n      'aria-label': 'Switch demo'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen\",\n    style: mode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right pr-4 pt-4\",\n      style: mode,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        className: \"border-gray-400 border-2 rounded-3xl\",\n        onClick: togglemode,\n        ...label,\n        color: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Alerts, {\n        type: type,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Data, {\n      mode: mode,\n      modetext: modetext,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4/N664SxH0m6B4pwST7QuPNtzFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Data","Switch","useState","Alerts","jsxDEV","_jsxDEV","App","_s","alert","setAlert","showAlert","mode","setMode","color","background","modetext","setModetext","togglemode","label","inputProps","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","message","_c","$RefreshReg$"],"sources":["/home/appvin/Desktop/react/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Data from \"./Components/CaseChanger\"\nimport { Switch } from '@mui/material';\nimport { useState } from 'react';\nimport Alerts from './Components/AlertingMsg';\n\nfunction App() {\n  const [alert, setAlert] = useState(null)\n  const showAlert = ()=>{}\n  \n  const [mode, setMode] = useState({\n          color:\"black\",\n          background:\"white\"\n          \n      })\n      const [modetext, setModetext] = useState(\"Enable Dark Mode\")\n      const togglemode = ()=>{\n          if (mode.color === \"black\"){\n              setMode({color:\"white\",\n                  background:\"black\",\n              \n              })\n              setModetext((\"Enable Light Mode\"))\n          }\n          else{\n              setMode({color:\"black\",\n                  background:\"white\",})\n              setModetext((\"Enable Dark Mode\"))\n          }\n      }\n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\n  return (\n    <div className='h-screen w-screen' style={mode}>\n      <div className='text-right pr-4 pt-4' style={mode}>\n      <Switch className='border-gray-400 border-2 rounded-3xl' onClick={togglemode} {...label}  color=\"default\"/>\n      </div>\n      <div className='mt-4'><Alerts type={type} message={message}/></div>\n      \n      <Data mode={mode} modetext={modetext} togglemode={togglemode}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,0BAA0B;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMQ,SAAS,GAAGA,CAAA,KAAI,CAAC,CAAC;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IACzBW,KAAK,EAAC,OAAO;IACbC,UAAU,EAAC;EAEf,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,kBAAkB,CAAC;EAC5D,MAAMe,UAAU,GAAGA,CAAA,KAAI;IACnB,IAAIN,IAAI,CAACE,KAAK,KAAK,OAAO,EAAC;MACvBD,OAAO,CAAC;QAACC,KAAK,EAAC,OAAO;QAClBC,UAAU,EAAC;MAEf,CAAC,CAAC;MACFE,WAAW,CAAE,mBAAoB,CAAC;IACtC,CAAC,MACG;MACAJ,OAAO,CAAC;QAACC,KAAK,EAAC,OAAO;QAClBC,UAAU,EAAC;MAAQ,CAAC,CAAC;MACzBE,WAAW,CAAE,kBAAmB,CAAC;IACrC;EACJ,CAAC;EACL,MAAME,KAAK,GAAG;IAAEC,UAAU,EAAE;MAAE,YAAY,EAAE;IAAc;EAAE,CAAC;EAC7D,oBACEd,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAEV,IAAK;IAAAW,QAAA,gBAC7CjB,OAAA;MAAKe,SAAS,EAAC,sBAAsB;MAACC,KAAK,EAAEV,IAAK;MAAAW,QAAA,eAClDjB,OAAA,CAACJ,MAAM;QAACmB,SAAS,EAAC,sCAAsC;QAACG,OAAO,EAAEN,UAAW;QAAA,GAAKC,KAAK;QAAGL,KAAK,EAAC;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACNtB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAE,QAAA,eAACjB,OAAA,CAACF,MAAM;QAACyB,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEnEtB,OAAA,CAACL,IAAI;MAACW,IAAI,EAAEA,IAAK;MAACI,QAAQ,EAAEA,QAAS;MAACE,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACpB,EAAA,CAnCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}